name: Publish Packages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  check-for-new-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Check PyPI version
        uses: maybe-hello-world/pyproject-check-version@v3
        id: versioncheck
        with:
          pyproject-path: "./pyproject.toml"
      
      - name: Report Results
        run: |
            echo "New Release found? ${{ steps.versioncheck.outputs.local_version_is_higher }}"
            echo "Local version: ${{ steps.versioncheck.outputs.local_version }}"
            echo "Public version: ${{ steps.versioncheck.outputs.public_version }}"
    outputs:
      do_publish: ${{ steps.versioncheck.outputs.local_version_is_higher }}

  pypi:
    name: Build and publish Python 🐍 distributions 📦 to PyPI
    runs-on: ubuntu-latest
    needs: check-for-new-release
    if: ${{ needs.check-for-new-release.outputs.do_publish == 'true' }}
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true
  conda:
    name: Build and publish Conda distrbutions
    needs: pypi  # wait for pypi build to finish
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}  # login bash for conda calls
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
      - name: Install build dependencies
        run: |
          conda install conda-build anaconda-client
          conda install -c conda-forge grayskull
          conda config --set anaconda_upload yes
      - name: Build and Push astartes
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          cd ..
          sleep 60s  # wait for the PyPI package to be visible
          grayskull pypi astartes
          cd astartes
          conda build .
      
